//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BenBurgers.FormalLanguagesAutomata.Grammars.Regular.Exceptions {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BenBurgers.FormalLanguagesAutomata.Grammars.Regular.Exceptions.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This element is not valid in this grammar..
        /// </summary>
        internal static string ElementIsNotValid {
            get {
                return ResourceManager.GetString("ElementIsNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The production of the production rule is empty..
        /// </summary>
        internal static string ProductionIsEmpty {
            get {
                return ResourceManager.GetString("ProductionIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The production of the production rule is not regular..
        /// </summary>
        internal static string ProductionIsNotRegular {
            get {
                return ResourceManager.GetString("ProductionIsNotRegular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the production is regular and of length 1, it should contain exactly one variable, terminal or empty element..
        /// </summary>
        internal static string ProductionRegularVariableTerminalOrExpected {
            get {
                return ResourceManager.GetString("ProductionRegularVariableTerminalOrExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This terminal is not valid in this grammar..
        /// </summary>
        internal static string TerminalIsNotAMember {
            get {
                return ResourceManager.GetString("TerminalIsNotAMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The set of terminals for this grammar does not contain the specified empty terminal..
        /// </summary>
        internal static string TerminalsDoesNotContainEmptyTerminal {
            get {
                return ResourceManager.GetString("TerminalsDoesNotContainEmptyTerminal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified variable does not have productions in this grammar..
        /// </summary>
        internal static string VariableDoesNotHaveProductions {
            get {
                return ResourceManager.GetString("VariableDoesNotHaveProductions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This variable is not valid in this grammar..
        /// </summary>
        internal static string VariableIsNotAMember {
            get {
                return ResourceManager.GetString("VariableIsNotAMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The set of variables for this grammar does not contain the specified start variable..
        /// </summary>
        internal static string VariablesDoesNotContainStartVariable {
            get {
                return ResourceManager.GetString("VariablesDoesNotContainStartVariable", resourceCulture);
            }
        }
    }
}
